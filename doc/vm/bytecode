% ESL Bytecode
% Baptiste Covolato
% December 03 2012

Description
==========

Memory and stack Manipulation
=============================

POP
---

LOAD
----

STORE
-------
STACK_STORE
-----------

Perform TOS = TOS1
Let TOS1 on the stack

Jumps
=====

JUMP
----

JUMP_IF_TRUE
------------

JUMP_IF_FALSE
-------------

Functions
=========

MAKE_FUNCTION
-------------

RETURN
------

Built-in Functions
------------------

### PRINT ###

### SIZE ###

Array Manipulation
==================

Build an array by using "array" key word

Example:
    table = array 10

By default all table values are initialisated to 0

MAKE_ARRAY size
---------------

Push an empty array in stack of size size
test = array 10

MAKE_ARRAY 10
STORE test

TABLE_ACCESS
------------

test = array 10
test[1] = array 10
test[1][3] = 2

MAKE_ARRAY 10
STORE test
MAKE_ARRAY 10
LOAD test
LOAD_CST
TABLE_ACCESS
STACK_STORE
STORE test
LOAD 2
LOAD test
LOAD_CST 1
TABLE_ACCESS
LOAD_CST 3
TABLE_ACCESS
STACK_STORE
POP
POP
