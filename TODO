[ESL] Option parser
[ESL] Error handling
[DOC] Write Documentation
[VM] Implement GC
[VM] Implement + for strings
[VM] Properly handle "nil"
[LEXER/PARSER/COMPILER] Introduce for loop
[LEXER/PARSER/COMPILER/VM] Introduce foreach loop
[PARSER] Introduce Unary operators
[LEXER/PARSER] Introduce "include" keywords
[LEXER/PARSER/COMPILER/VM] Introduce arrays
[LEXER/PARSER/COMPILER/VM] Introduce Objects
[LEXER 50%] Introduce Comments
[COMPILER] Introduce Bytecode optimizer
[COMPILER] Introduce AST checker to provide bad operation (-, /, ... on strings, ...)
[PARSER] Introduce post/pre incrementation/decrementation
[PARSER] Introduce +=, -=, *=, /=, %= operators
[PARSER/COMPILER/VM] break statement
[PARSER/COMPILER/VM] continue statement
[VM] Update import (path looking)
[LIB] API ESL -> C++

[STD] Std Lib

- Review Code:
    * Less dynamic allocation
    * Use variants in parser
    * Securise Cast with c++ cast and return check
    * Replace NULL by nullptr
    * Rewrite Context

Bugs:

